import React, { useEffect, useRef } from 'react';
 import  { Editor } from '@tinymce/tinymce-react';
const allowedExt  =  ['jpg', 'jpeg', 'png', 'gif', 'svg'];
 export default function TextEditor({setvalue, value}) {
   const editorRef = useRef(null);
   const log = (event) => {
       console.log(event);
   };
    const handleEditorChange = (content) => {
      setvalue(content);
    }

   return (
     <>
     
     <input type='file' id='file-custom' hidden accept='image/*' onChange={e => {console.log('ss',e)}} />
       <Editor
         onInit={(evt, editor) => editorRef.current = editor}
         value={value}
         init={{
          selector: '#editor',
           height: 300,
           menubar: false,
           plugins: [
            'image',
            'lists',
             'advlist', 'autolink',  'link', 'charmap', 'print', 'preview', 'sanchor',
             'visualblocks', 'code',
             'media','paste', 'code', 'help', 'wordcount', 'styleselect',
             'insert',
             'contextmenu',
             'tinydrive',
         ],
           toolbar: 'undo redo ' +
           ' insertfile | styles | blocks | fontfamily | fontsize ' +
           'bold italic backcolor | alignleft aligncenter ' +
           'alignright alignjustify | bullist numlist outdent indent | ' +
           'removeformat | media  image  link | help | mybutton ',
           setup: function (editor) {
            editor.ui.registry.addIcon(
              "insert-time",
              '<label for="file-custom" id="test-label"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">'
              +'<path d="M18.375 0C18.5512 0.055125 18.7304 0.102482 18.9033 0.166714C19.8712 0.526125 20.5606 1.45275 20.5644 2.48132C20.5769 5.93566 20.5721 9.39005 20.569 12.8444C20.5713 12.9586 20.5506 13.0722 20.5081 13.1783C20.4656 13.2844 20.4022 13.3808 20.3217 13.4619C20.2411 13.543 20.1451 13.607 20.0393 13.6502C19.9335 13.6934 19.8201 13.7149 19.7058 13.7133C19.2205 13.7089 18.8585 13.3256 18.8582 12.8007C18.8562 9.73011 18.8559 6.65964 18.8571 3.58929C18.8571 3.29464 18.8577 3 18.8571 2.70536C18.8556 2.04857 18.5247 1.71466 17.8719 1.71455C14.2389 1.71413 10.606 1.71413 6.97318 1.71455C5.545 1.71455 4.11684 1.71466 2.6887 1.71488C2.04921 1.7153 1.71477 2.049 1.71471 2.68832C1.71414 7.74936 1.71414 12.8104 1.71471 17.8715C1.71471 18.5246 2.04889 18.8573 2.70509 18.8573C6.06127 18.8578 9.41746 18.8581 12.7737 18.8582C13.4487 18.8585 13.8813 19.4318 13.6566 20.0195C13.5239 20.3666 13.2102 20.5704 12.7915 20.571C11.5151 20.5729 10.2387 20.5731 8.96229 20.5718C6.91821 20.5718 4.87414 20.5718 2.83007 20.5718C1.30489 20.5718 0.415875 19.8857 0.0336429 18.4149C0.0293571 18.3995 0.0114107 18.3881 0 18.375V2.19643C0.0192857 2.13954 0.0431786 2.08393 0.0572143 2.02559C0.240375 1.26541 0.664446 0.680946 1.35632 0.315589C1.61871 0.176786 1.91539 0.103286 2.19643 0H18.375Z" fill="black"/>'
              +'<path d="M19.5 24C19.0014 23.7844 18.8277 23.4039 18.8494 22.8684C18.8799 22.1135 18.8571 21.3564 18.8571 20.5714C18.4446 20.5714 18.0551 20.5714 17.6655 20.5714C17.2105 20.5714 16.7555 20.5768 16.3006 20.5696C15.8024 20.5619 15.4267 20.1849 15.4295 19.7088C15.4322 19.2305 15.8061 18.8624 16.31 18.8588C17.1472 18.8535 17.9845 18.8573 18.8571 18.8573V18.5576C18.8571 17.8172 18.8543 17.0768 18.8581 16.3364C18.8609 15.8117 19.2216 15.4319 19.7092 15.4293C20.1958 15.4267 20.5671 15.8079 20.5701 16.3276C20.5747 17.1568 20.5713 17.986 20.5713 18.8572H20.835C21.5219 18.8572 22.2096 18.8786 22.8954 18.8503C23.4223 18.8289 23.79 19.0136 24 19.5V19.9286C23.7904 20.4123 23.4245 20.603 22.8988 20.5778C22.3216 20.55 21.7422 20.5714 21.1637 20.5714H20.5714C20.5714 21.3709 20.551 22.1357 20.5784 22.8987C20.5973 23.4245 20.412 23.7902 19.9285 24H19.5Z" fill="black"/>'
              +'<path d="M7.70775 12.4889C8.874 11.3289 10.0193 10.1902 11.1639 9.0509C11.5181 8.6983 11.8677 8.34119 12.2246 7.99126C12.6107 7.61256 13.1019 7.60555 13.4844 7.9859C14.6673 9.16308 15.8462 10.3443 17.0209 11.5295C17.0845 11.5878 17.1258 11.6665 17.1376 11.7519C17.144 13.5359 17.1426 15.3198 17.1426 17.1232H3.44058C3.43672 17.0429 3.42911 16.9571 3.42906 16.8714C3.42836 15.2116 3.43104 13.5517 3.42488 11.8917C3.42051 11.8133 3.43393 11.7348 3.46413 11.6622C3.49434 11.5897 3.54054 11.5249 3.59931 11.4727C3.88436 11.2029 4.15474 10.9177 4.43208 10.6397C4.91422 10.1564 5.36727 10.1522 5.84513 10.6299C6.40059 11.1851 6.95502 11.7413 7.50842 12.2985C7.5705 12.3608 7.63559 12.42 7.70775 12.4887" fill="black"/>'
              +'<path d="M7.72364 3.42936C8.14704 3.4312 8.56041 3.55846 8.91152 3.79509C9.26263 4.03171 9.53575 4.36709 9.69636 4.75884C9.85698 5.1506 9.8979 5.58117 9.81395 5.99617C9.73 6.41117 9.52495 6.79198 9.2247 7.09051C8.92444 7.38904 8.54245 7.59189 8.12697 7.67345C7.7115 7.755 7.28117 7.7116 6.89035 7.54872C6.49952 7.38585 6.16573 7.1108 5.93113 6.75833C5.69654 6.40586 5.57166 5.99177 5.57227 5.56836C5.57298 5.28662 5.6292 5.00779 5.73772 4.74778C5.84624 4.48778 6.00493 4.25171 6.20472 4.05307C6.40452 3.85442 6.6415 3.6971 6.90212 3.59008C7.16275 3.48306 7.4419 3.42845 7.72364 3.42936" fill="black"/>'
              +'</svg></label>'
            );
            function toTimeHtml(date) {
              return '<time datetime="' + date.toString() + '">' + date.toDateString() + '</time>';
            }
            
            function insertDate() {
              var html = toTimeHtml(new Date());
              editor.insertContent(html);
            }
        
            editor.ui.registry.addButton('mybutton', {
              // text: 'My Button',
              icon: 'insert-time',
              // icon :  '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18.5426 0.0507014C18.4866 0.0340582 18.4307 0.0174168 18.375 0H2.19643C2.1084 0.0323533 2.01883 0.0617841 1.92926 0.0912149L1.92926 0.0912155C1.73289 0.15574 1.53652 0.220265 1.35632 0.315589C0.664446 0.680946 0.240375 1.26541 0.0572143 2.02559C0.0476501 2.06534 0.033509 2.10383 0.0193674 2.14232C0.0127558 2.16031 0.0061441 2.17831 0 2.19643V18.375C0.00362413 18.3792 0.00790755 18.3831 0.0122032 18.3871L0.0122068 18.3872C0.021435 18.3957 0.0307187 18.4044 0.0336429 18.4149C0.415875 19.8857 1.30489 20.5718 2.83007 20.5718H8.96229C10.2387 20.5731 11.5151 20.5729 12.7915 20.571C13.2102 20.5704 13.5239 20.3666 13.6566 20.0195C13.8813 19.4318 13.4487 18.8585 12.7737 18.8582C9.41746 18.8581 6.06127 18.8578 2.70509 18.8573C2.04889 18.8573 1.71471 18.5246 1.71471 17.8715C1.71414 12.8104 1.71414 7.74936 1.71471 2.68832C1.71477 2.049 2.04921 1.7153 2.6887 1.71488C4.11684 1.71466 5.545 1.71455 6.97318 1.71455C10.606 1.71413 14.2389 1.71413 17.8719 1.71455C18.5247 1.71466 18.8556 2.04857 18.8571 2.70536C18.8575 2.90179 18.8574 3.09821 18.8572 3.29464L18.8571 3.58929C18.8559 6.65964 18.8562 9.73011 18.8582 12.8007C18.8585 13.3256 19.2205 13.7089 19.7058 13.7133C19.8201 13.7149 19.9335 13.6934 20.0393 13.6502C20.1451 13.607 20.2411 13.543 20.3217 13.4619C20.4022 13.3808 20.4656 13.2844 20.5081 13.1783C20.5506 13.0722 20.5713 12.9586 20.569 12.8444L20.5699 11.9166C20.5728 8.77151 20.5758 5.62639 20.5644 2.48132C20.5606 1.45275 19.8712 0.526125 18.9033 0.166714C18.785 0.122777 18.6638 0.0867353 18.5426 0.0507025L18.5426 0.0507014ZM18.8496 22.8683C18.8279 23.4038 19.0016 23.7843 19.5002 23.9999H19.9287C20.4122 23.7901 20.5975 23.4244 20.5786 22.8986C20.5595 22.366 20.5636 21.8325 20.5679 21.287C20.5697 21.051 20.5716 20.8127 20.5716 20.5713H21.1639C21.3393 20.5713 21.5147 20.5693 21.6901 20.5674C22.0935 20.5629 22.4968 20.5583 22.899 20.5777C23.4247 20.6029 23.7906 20.4122 24.0002 19.9285V19.4999C23.7902 19.0135 23.4225 18.8288 22.8956 18.8502C22.4162 18.87 21.9359 18.8655 21.4556 18.861C21.2488 18.8591 21.0419 18.8571 20.8352 18.8571H20.5715C20.5715 18.5957 20.5718 18.338 20.5721 18.083V18.0815V18.0799V18.0791C20.5728 17.4857 20.5735 16.9066 20.5703 16.3275C20.5673 15.8078 20.196 15.4266 19.7094 15.4292C19.2218 15.4318 18.8611 15.8116 18.8583 16.3363C18.8556 16.8562 18.8562 17.3761 18.8568 17.896C18.8571 18.1165 18.8573 18.337 18.8573 18.5575V18.8572C18.5995 18.8572 18.3448 18.8569 18.0923 18.8565H18.0902H18.0881C17.4872 18.8558 16.8987 18.855 16.3102 18.8587C15.8063 18.8623 15.4324 19.2304 15.4297 19.7087C15.4269 20.1848 15.8026 20.5618 16.3008 20.5695C16.6191 20.5746 16.9375 20.5734 17.2559 20.5723H17.2562C17.3927 20.5718 17.5292 20.5713 17.6657 20.5713H18.8573C18.8573 20.8081 18.8594 21.0424 18.8614 21.2749V21.2752V21.2755C18.8662 21.8133 18.8709 22.3414 18.8496 22.8683ZM7.70799 12.4888L8.62815 11.5737L8.63296 11.5689C9.48241 10.7241 10.3235 9.88762 11.1641 9.05084C11.3009 8.91467 11.437 8.77782 11.5731 8.64097L11.5733 8.64086C11.7895 8.4234 12.0058 8.20595 12.2248 7.9912C12.6109 7.6125 13.1021 7.60549 13.4846 7.98584C14.6675 9.16302 15.8464 10.3442 17.0211 11.5294C17.0847 11.5877 17.126 11.6664 17.1378 11.7518C17.1433 13.2637 17.1431 14.7755 17.1429 16.2991L17.1428 17.1231H3.44082C3.43962 17.0981 3.43806 17.0726 3.43647 17.0467C3.43296 16.9894 3.42934 16.9304 3.4293 16.8713C3.42911 16.4122 3.42917 15.9531 3.42924 15.494C3.42941 14.2933 3.42958 13.0925 3.42512 11.8916C3.42075 11.8132 3.43417 11.7347 3.46437 11.6621C3.49458 11.5896 3.54078 11.5248 3.59955 11.4726C3.79334 11.2892 3.98035 11.0987 4.16737 10.9081L4.16762 10.9079C4.25561 10.8182 4.34361 10.7286 4.43232 10.6396C4.91446 10.1563 5.36751 10.1521 5.84537 10.6298C6.40083 11.185 6.95526 11.7412 7.50866 12.2984C7.55052 12.3404 7.59375 12.381 7.63959 12.4241L7.63963 12.4241C7.66177 12.4449 7.6845 12.4663 7.70799 12.4886V12.4888ZM8.91152 3.79518C8.56041 3.55855 8.14704 3.43129 7.72364 3.42945C7.4419 3.42854 7.16275 3.48315 6.90212 3.59017C6.6415 3.69719 6.40452 3.85451 6.20472 4.05316C6.00493 4.2518 5.84624 4.48787 5.73772 4.74787C5.6292 5.00788 5.57298 5.28671 5.57227 5.56845C5.57166 5.99186 5.69654 6.40595 5.93113 6.75842C6.16573 7.11089 6.49952 7.38594 6.89035 7.54881C7.28117 7.71169 7.7115 7.75509 8.12697 7.67354C8.54245 7.59198 8.92444 7.38913 9.2247 7.0906C9.52495 6.79207 9.73 6.41126 9.81395 5.99626C9.8979 5.58126 9.85698 5.15069 9.69636 4.75893C9.53575 4.36718 9.26263 4.0318 8.91152 3.79518Z" fill="black"/></svg>',
              onAction: function (buttonApi) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
            
                input.onchange = function() {
                  var file = this.files[0];
                  if(allowedExt.includes(file.type.split('/')[1])){
                  var reader = new FileReader();
                  reader.onload = function () {
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = window.tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);
                    console.log(blobInfo.filename().name);                   
                    editor.insertContent('<img src="' + blobInfo.blobUri() + '" />');
                  };
                  reader.readAsDataURL(file);
                }else{
                  alert('Only images are allowed');
                }
                };
                input.click();
              }
            });
           },
           content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
           image_title: true, 
           // enable automatic uploads of images represented by blob or data URIs
           automatic_uploads: true,
           relative_urls: false,
            remove_script_host: false,
           // add custom filepicker only to Image dialog
           file_picker_types: 'image',
           file_browser_callback_types: 'image',
           images_upload_handler: function (blobInfo, success, failure) {
            console.log('blobInfo',blobInfo.blob());
            
    },

           file_picker_callback: function(callback, value, meta) {
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');
        
            input.onchange = function() {
              var file = this.files[0];
              if(allowedExt.includes(file.type.split('/')[1])){
              var reader = new FileReader();
              reader.onload = function () {
                var id = 'blobid' + (new Date()).getTime();
                var blobCache = window.tinymce.activeEditor.editorUpload.blobCache;
                var base64 = reader.result.split(',')[1];
                var blobInfo = blobCache.create(id, file, base64);
                blobCache.add(blobInfo);
        
                // call the callback and populate the Title field with the file name
                callback(blobInfo.blobUri(), { title: file.name });
              };
              reader.readAsDataURL(file);
            }else{
              alert('Only images are allowed');
            }
            };
            input.click();
          }
         }}
         apiKey={process.env.REACT_APP_TINY_API_KEY}
          onEditorChange={handleEditorChange}
         
       />

       {/* <button onClick={log}>Log editor content</button> */}
     </>
   );
 }